{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["getSrc","node","srcSet","JSON","parse","json_metadata","image","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allHiveArticle","edges","map","permlink","key","style","marginBottom","rhythm","boxShadow","to","created","className","dangerouslySetInnerHTML","__html","body","display","flexWrap","justifyContent","alignItems","listStyle","padding","margin","length","rel","pageQuery"],"mappings":"2FAAA,sIAQMA,EAAS,SAASC,GACtB,IAAIC,EAASC,KAAKC,MAAMH,EAAKI,eAAeC,MAC5C,OAAGJ,EACMA,EAAO,GAEP,eAwEIK,UArEG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAWF,EAAKG,KAAKC,aAAaC,MAClCC,EAAQN,EAAKO,eAAeC,MAGlC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMG,KAAI,YAAe,IAAZhB,EAAW,EAAXA,KACNY,EAAQZ,EAAKY,OAASZ,EAAKiB,SACjC,OACE,6BAASC,IAAKlB,EAAKiB,UACjB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIvB,EAAKiB,UAC1CL,IAGL,+BAAQZ,EAAKwB,UAEf,iCACE,yBAAKC,UAAU,WAAWxB,OAAQF,EAAOC,KACzC,uBAAGyB,UAAU,YACXC,wBAAyB,CACvBC,OAAQ3B,EAAK4B,aAOvB,wBACET,MAAO,CACLU,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,WAAY,SACZC,UAAW,OACXC,QAAS,KAGV,EAKC,wBACEhB,IAAG,qBACHC,MAAO,CACLgB,OAAQ,IAGT,GAEJtB,EAAMuB,QAAU,IACf,kBAAC,OAAD,CAAMb,GAAE,KAAQc,IAAI,QAApB,kBAWL,IAAMC,EAAS","file":"component---src-pages-index-js-a7effc9e0b93dfb9a1ea.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst getSrc = function(node) {\r\n  let srcSet = JSON.parse(node.json_metadata).image;\r\n  if(srcSet)\r\n    return srcSet[0];\r\n  else \r\n    return 'noimage.png';\r\n}\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle =data.site.siteMetadata.title\r\n  const posts = data.allHiveArticle.edges\r\n  const isFirst = true;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      <Bio />\r\n      {posts.map(({ node }) => {\r\n        const title = node.title || node.permlink\r\n        return (\r\n          <article key={node.permlink}>\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.permlink}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.created}</small>\r\n            </header>\r\n            <section>\r\n              <img className='img-body' srcSet={getSrc(node)}/>\r\n              <p className='hive-body'\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.body,\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        )\r\n      })}\r\n        <ul\r\n          style={{\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            listStyle: 'none',\r\n            padding: 0,\r\n          }}\r\n        >\r\n          {!isFirst && (\r\n            <Link to={``} rel=\"prev\">\r\n              ← Previous Page\r\n            </Link>\r\n          )}\r\n            <li\r\n              key={`pagination-number${1}`}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {1}\r\n            </li>\r\n          {posts.length >= 10 && (\r\n            <Link to={`/2`} rel=\"next\">\r\n              Next Page →\r\n            </Link>\r\n          )}\r\n        </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allHiveArticle (\r\n      limit: 10\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          title\r\n          author\r\n          created(formatString: \"MMMM DD, YYYY\")\r\n          permlink\r\n          body,\r\n          json_metadata\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}