{"componentChunkName":"component---src-templates-blog-post-js","path":"/github-pull-request-showing-commits-which-are-already-on-the-target-branch","result":{"data":{"site":{"siteMetadata":{"title":"My Hive Posts"}},"hiveArticle":{"title":"GitHub Pull Request Showing Commits which are already on the Target Branch","body":"It happens with me sometimes that if I have created a Pull Request which is merged and if I try to create another Pull Request, the commits made in the first Pull Request still shows. Though the code changes in the pull request did not appear, the commits show. For me whenever I create a Pull Request I always check the commits first made only in that Pull Request, so I wanted a way to fix that. \n\nI have an option of Rebase though which technically GitHub should do whenever the Pull Request is merged. But the problem with rebase is that you need to create an extra commit and I usually want to keep my commits as minimum and meaningful as possible.\n\nSo what I actually do is to run the below commands which delete the branch from Local as well as Remote and then merged the branch from the Remote Repository.\n\n```\ngit push --delete origin develop\ngit checkout master\ngit branch -D develop\ngit checkout -b develop\ngit fetch upstream\ngit merge upstream/develop\ngit push origin develop\n```\n\nI know its not the best solution but it works in my case to keep my Pull Request as clean as possible.","created":"February 19, 2019"}},"pageContext":{"title":"GitHub Pull Request Showing Commits which are already on the Target Branch","permlink":"github-pull-request-showing-commits-which-are-already-on-the-target-branch","previous":{"title":"Voting Slider and Scoring Slider Added to KnackSteem","permlink":"voting-slider-and-scoring-slider-added-to-knacksteem"},"next":{"title":"Announcement Feature, Post Payout and Bug Fixes in KnackSteem","permlink":"announcement-feature-post-payout-and-bug-fixes-in-knacksteem"}}}}