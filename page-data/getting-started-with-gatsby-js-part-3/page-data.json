{"componentChunkName":"component---src-templates-blog-post-js","path":"/getting-started-with-gatsby-js-part-3","result":{"data":{"site":{"siteMetadata":{"title":"My Hive Posts"}},"hiveArticle":{"title":"Getting Started With Gatsby.js - Part 3","body":"In this tutorial you will be Learning\n\n- Getting Data in Gatsby\n- GraphQl\n\n#### Requirements\n\n- Node.js and NPM installed on your System\n- Know basics of HTML, CSS and JavaScript, though not mandatory\n\n#### Difficulty\n- Intermediate\n\n#### Tutorial Contents\n\nWe all know a website is made up of a lot of components and in that Data is one of the important component. Just think about Utopian.io without any posts, would it attract users, no it will not. So to make people come and enjoy any website by reading or doing something you need Data and this tutorial is about getting Data into Gatsby Site.\n\nNow we talked about Data, what exactly is data. If I talked about Utopian.io, whatever posts we write are data because it is outside the Code base of Utopian thus its called a Data similarly whatever is outside of Gatsby Component are data. We will be bringing the data from outside and show it from the component whenever we need it. Data can be anywhere a file, database, through the API or even from the Wordpress. \n\nGatsby uses GraphQL to pull data from outside to the components. According to [GraphQL.org](GraphQL.org)\n\n>GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.\n\nIn this tutorial we will be building a page which looks like below which gives the details about the Utopian Moderators. Now since the data is outside of React Components we need to have some mechanism of getting it. \n\n![image.png](https://res.cloudinary.com/hpiynhbhq/image/upload/v1518337501/v6eko6ru98ugrrtthuim.png)\n\nWe will be using a simple File System where all my moderator JSON response is kept. So to do that we have to install `gatsby-source-filesystem` and `gatsby-transformer-json` and then change the gatsby-config.js as below :\n\n```\nmodule.exports = {\n  siteMetadata: {\n    title: 'Utopian Moderator',\n  },\n  plugins: ['gatsby-plugin-react-helmet', 'gatsby-transformer-json', 'gatsby-plugin-glamor',\n  {\n      resolve: 'gatsby-source-filesystem',\n      options: {\n        name: 'src',\n        path: 'Path of your file',\n      },\n  },\n ],\n};\n```\n\nNow once done we have to write your GraphQL query. Whenever you start your Gatsby site you might have seen something like below where its written that GraphiQL is an in-browser IDE to explore site's data and schema which can be seen at http://localhost:8000/___graphql.\n\n![image.png](https://res.cloudinary.com/hpiynhbhq/image/upload/v1518337774/gcadxvumwbgq7rtfol9i.png)\n\nWhen you head over to the http://localhost:8000/___graphql you will see something like below where left hand side you will be writing the query and right hand side will give you the result of the query.\n\n![image.png](https://res.cloudinary.com/hpiynhbhq/image/upload/v1518338197/crjponjttexrspgcejuq.png)\n\nSince we already got teh data from Utopian API we will be writing the query as below where allSrcJson is the root entity and then we have edges and node. Inside node we get all the results of the moderators.\n\n```\n{\n  allSrcJson {\n      totalCount\n      edges {\n        node {\n          total\n          results {\n            account\n            total_paid_rewards\n            should_receive_rewards\n            total_moderated\n            percentage_total_rewards_moderators\n            supermoderator\n            referrer\n          }\n        }\n      }\n   }\n}\n```\n\nwhich gives the result as \n\n![image.png](https://res.cloudinary.com/hpiynhbhq/image/upload/v1518338634/yh2plh6tnvsowfomgtdb.png)\n\nNow once we get the GraphQL query, now its time to create the page which we have shown earlier. So to include the query in your Gatsby we just have to write our query inside IndexQuery  with graphql tag. This graphql tag is provided by the Gatsby where in Gatsby Build Process the queries are parsed before using. We are also using the result in our component as `data.allSrcJson.edges.map` why because nodes is an array of objects where we need to get an object from the entire lists. Since in our case we have defined total moderators inside the node itself we can get that value using `node.total`. No again the results is an array of objects so we need to map that too and get the values out of it.\n\n```\nimport React from \"react\"\n\nexport default ({ data }) => <div>\n    <h1>Utopian Moderator</h1>\n    {data.allSrcJson.edges.map(({ node }) => (\n        <div key={node.total}>\n          <p>Total Modeartors : {node.total}</p>\n          {node.results.map(obj => {\n            if (obj) {\n                var value = Number(obj.percentage_total_rewards_moderators).toFixed(2);\n                return <p>{obj.account} Moderator modearted {obj.total_moderated} posts \n                                who has Moderation Percentage of {value}% out of 100%</p>\n            } else return null\n          })}\n        </div>\n    ))}\n</div>\n    \nexport const query = graphql`\n  query IndexQuery {\n    allSrcJson {\n      totalCount\n      edges {\n        node {\n          total\n          results {\n            account\n            total_paid_rewards\n            should_receive_rewards\n            total_moderated\n            percentage_total_rewards_moderators\n            supermoderator\n            referrer\n          }\n        }\n      }\n    }\n  }\n`;\n```\n\n\n\n#### Curriculum\n\n- [Getting Started With Gatsby.js - Part 1](https://utopian.io/utopian-io/@codingdefined/getting-started-with-gatsby-js-part-1)\n- [Getting Started With Gatsby.js - Part 2](https://utopian.io/utopian-io/@codingdefined/getting-started-with-gatsby-js-part-2)\n    \n\n<br /><hr/><em>Posted on <a href=\"https://utopian.io/utopian-io/@codingdefined/getting-started-with-gatsby-js-part-3\">Utopian.io -  Rewarding Open Source Contributors</a></em><hr/>","created":"February 11, 2018"}},"pageContext":{"title":"Getting Started With Gatsby.js - Part 3","permlink":"getting-started-with-gatsby-js-part-3","previous":{"title":"B&W Photo Contest - Urban Motion - Multiple Entries","permlink":"b-and-w-photo-contest-urban-motion-multiple-entries"},"next":{"title":"[GoldenHourPhotography] Rays from Sun through the cloud","permlink":"goldenhourphotography-rays-from-sun-through-the-cloud"}}}}