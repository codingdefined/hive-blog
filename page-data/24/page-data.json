{"componentChunkName":"component---src-templates-blog-list-js","path":"/24","result":{"data":{"site":{"siteMetadata":{"title":"My Hive Posts"}},"allHiveArticle":{"edges":[{"node":{"id":"8681107a-c122-5797-84ec-72050e424fc9","title":"How to Approach Utopian.io Regex Task Request","author":"codingdefined","created":"May 25, 2018","permlink":"how-to-approach-utopian-io-regex-task-request","body":"So Utopian.io recently created a Task Request for Developers where they wanted skilled JS Developers and Regex experts which you can check here https://steemit.com/utopian-io/@utopian.tasks/js-developers-and-regex-experts-wanted-javascript-coding-task. Now there are quite a few checks you have to do before giving the result back. \n\nIn the task request, it is specifically mentioned that that \"Parse the text and compare it with a set of regular expressions\", thus instead of easy split functions we should use REGEX. So lets find out how to approach this Task Request.\n\nFirst Of All, in the task request it is clearly mentioned that always it starts with \"@utopian-bot !utopian\", that means we have some starting point. Now using the Regex Expression we will check if the input test starts with @utopian-bot !utopian or not.\n\nI use https://regex101.com/ to check all my regex because it gives a clear explanation how my Regex Expression worked. Now since I know that my input will start with @utopian-bot !utopian I will start my regex with @utopian-bot !utopian* which means match everything which starts with \"@utopian-bot !utopian\". Next is to get the value after \"@utopian-bot !utopian\" which can be done using the Regex `@utopian-bot !utopian *([^\\n]*)`. The Explanation from https://regex101.com/ is \n\n![](https://cdn.steemitimages.com/DQmTLYwgaEEkFz6VygQddaaPxPkYCGj6YLc7arNsFCCUubA/image.png)\n\n`([^\\n]*)` means get all the characters from the single line and then add it as a group. Thus we will get blank or the beneficiaries i.e. [], or '@mention1 @mention2 @mention3 @mention4' or  '@mention1:15% @mention2:35% @mention3:25% @mention4:25%'. \n\nOur Next Part is to get the mention and the appropriate weight of that mentions which can be done using the regex `(\\w+(?::)(\\d+)?) ` which is creating groups of mention:weight as shown below\n\n![](https://cdn.steemitimages.com/DQmfWSUnnSMxZroCZd9oTAykfEbQv5poVzcykNEoPWUmWT8/image.png)\n\n`\\w+` matches any word character \n`:` matches the character : literally (case sensitive)\n`\\d+` matches a digit (equal to [0-9])\n\nNow after that you will get a group, thus you have to loop through it and send the mention and weight in the beneficiary. This is a how you approach for the similar Task Request in teh future.","json_metadata":"{\"tags\":[\"utopian-io\",\"programming\",\"steemdev\",\"javascript\",\"tutorial\"],\"users\":[\"utopian-bot\",\"mention1\",\"mention2\",\"mention3\",\"mention4\"],\"image\":[\"https:\\/\\/cdn.steemitimages.com\\/DQmTLYwgaEEkFz6VygQddaaPxPkYCGj6YLc7arNsFCCUubA\\/image.png\",\"https:\\/\\/cdn.steemitimages.com\\/DQmfWSUnnSMxZroCZd9oTAykfEbQv5poVzcykNEoPWUmWT8\\/image.png\"],\"links\":[\"https:\\/\\/steemit.com\\/utopian-io\\/@utopian.tasks\\/js-developers-and-regex-experts-wanted-javascript-coding-task\",\"https:\\/\\/regex101.com\\/\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"60f1a34e-63a5-513e-81a3-f2e9c6758e48","title":"Street Photography - Kodaikanal - Happy Face","author":"codingdefined","created":"May 24, 2018","permlink":"street-photography-kodaikanal-happy-face","body":"Street Photography - Kodaikanal, Tamil Nadu, India. A shopping place in the frame where a woman is happy to see people clicking photos of their shop.\n\n![StreetPhotography.jpg](https://cdn.steemitimages.com/DQmQimszBytCHo5UkUsRxG6PFMsgzW6k55hHnZeTkyP1Mi5/StreetPhotography1.jpg)\n\n### Camera: Nokia 6, Edited","json_metadata":"{\"tags\":[\"streetphotography\",\"photography\",\"india\",\"photofeed\",\"life\"],\"image\":[\"https:\\/\\/cdn.steemitimages.com\\/DQmQimszBytCHo5UkUsRxG6PFMsgzW6k55hHnZeTkyP1Mi5\\/StreetPhotography1.jpg\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"795c50c5-e65f-54c2-9d22-d494e41729ed","title":"Travel to Red Fort in Delhi, India","author":"codingdefined","created":"May 21, 2018","permlink":"travel-to-red-fort-in-delhi-india","body":"Red Fort is a fort which is situated in Delhi, India. It was a fort of Mughal Rulers who stayed here for more than 200 years. On the Independence Day, Prime Minister of India also delivers his speech after hoisting the Indian Flag at the main gate of the fort.\n\n### View of Red Fort form a distance\n\n![IMG_20180422_160450.jpg](https://steemitimages.com/DQmazjuToytjhZkhCaDpdeFKDVz47QT3aEVYWdxUcSyYuMV/IMG_20180422_160450.jpg)\n\n### The surrounding area of Red Fort\n\n![IMG_20180422_160900.jpg](https://steemitimages.com/DQmRJg3yQmpS2sQJSEiJnoBuY37WW4Z4CvDtupy3ArAqeyz/IMG_20180422_160900.jpg)\n\n### Main Gate to go Inside the Fort\n\n![IMG_20180422_162450.jpg](https://steemitimages.com/DQmUJFZXhtjeW46EuJ2fTaX8CfbMMMGkedrKr6GiPebdPHz/IMG_20180422_162450.jpg)\n\n### Its a World Heritage Monument\n\n![IMG_20180422_162835.jpg](https://steemitimages.com/DQmVzFKPGqdx9jZPS1L3k9SwrG4Qijzt2QMbJ9vbHnq1QRX/IMG_20180422_162835.jpg)\n\n### Few Monumnets Inside the Read Fort Complex\n\n![IMG_20180422_163800.jpg](https://steemitimages.com/DQmPuX979bAgCRwaX5R9WoNEBDHprFziFtQY3uG9aYaLLvb/IMG_20180422_163800.jpg)\n\n![IMG_20180422_163858.jpg](https://steemitimages.com/DQmVAjCSf1RsqcFV8kiVeeBFyp7DhdgfG4hiuYoj9zzNxzW/IMG_20180422_163858.jpg)\n\n![IMG_20180422_164246.jpg](https://steemitimages.com/DQmSnXXD7iYtjtfvCSqJXJcxbF7EqTjsLKZVdEcCPqxr4jd/IMG_20180422_164246.jpg)\n\n![IMG_20180422_164640.jpg](https://steemitimages.com/DQmcMwS6gvsZhWd8ASnZ9jBxDKgjDcfDt4tcaaa1nq2cDpR/IMG_20180422_164640.jpg)\n\n\n# Camera : Nokia 6","json_metadata":"{\"tags\":[\"photofeed\",\"photography\",\"smartphonephotography\",\"india\",\"travel\"],\"image\":[\"https:\\/\\/steemitimages.com\\/DQmazjuToytjhZkhCaDpdeFKDVz47QT3aEVYWdxUcSyYuMV\\/IMG_20180422_160450.jpg\",\"https:\\/\\/steemitimages.com\\/DQmRJg3yQmpS2sQJSEiJnoBuY37WW4Z4CvDtupy3ArAqeyz\\/IMG_20180422_160900.jpg\",\"https:\\/\\/steemitimages.com\\/DQmUJFZXhtjeW46EuJ2fTaX8CfbMMMGkedrKr6GiPebdPHz\\/IMG_20180422_162450.jpg\",\"https:\\/\\/steemitimages.com\\/DQmVzFKPGqdx9jZPS1L3k9SwrG4Qijzt2QMbJ9vbHnq1QRX\\/IMG_20180422_162835.jpg\",\"https:\\/\\/steemitimages.com\\/DQmPuX979bAgCRwaX5R9WoNEBDHprFziFtQY3uG9aYaLLvb\\/IMG_20180422_163800.jpg\",\"https:\\/\\/steemitimages.com\\/DQmVAjCSf1RsqcFV8kiVeeBFyp7DhdgfG4hiuYoj9zzNxzW\\/IMG_20180422_163858.jpg\",\"https:\\/\\/steemitimages.com\\/DQmSnXXD7iYtjtfvCSqJXJcxbF7EqTjsLKZVdEcCPqxr4jd\\/IMG_20180422_164246.jpg\",\"https:\\/\\/steemitimages.com\\/DQmcMwS6gvsZhWd8ASnZ9jBxDKgjDcfDt4tcaaa1nq2cDpR\\/IMG_20180422_164640.jpg\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"dc68e1a9-d351-5859-bcac-1250f0714b71","title":"ColorChallenge - Thursday Green - Leaves","author":"codingdefined","created":"May 17, 2018","permlink":"colorchallenge-thursday-green-leaves","body":"So I borrowed a Nikon D5200 from my friend to try out focusing.\n\n![_DSC0047.jpg](https://steemitimages.com/DQmcz97qnWJbKT4HDuJ29pj42A4pHTvL9Zh6GMWj7PfVize/_DSC0047.jpg)\n\n### Camera : Nikon D5200","json_metadata":"{\"tags\":[\"colochallenge\",\"photography\",\"colourfulphotography\",\"india\",\"photofeed\"],\"image\":[\"https:\\/\\/steemitimages.com\\/DQmcz97qnWJbKT4HDuJ29pj42A4pHTvL9Zh6GMWj7PfVize\\/_DSC0047.jpg\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"2014d1f6-acce-5163-bd55-24a4728d884c","title":"When You Are Standing Above the Clouds","author":"codingdefined","created":"May 16, 2018","permlink":"when-you-are-standing-above-the-clouds","body":"So I was in KodaiKanal and where it was raining, the fog was so much that it looks like you are standing above the clouds.\n\n![_DSC0213.jpg](https://steemitimages.com/DQmZN3hMG5hXTjPGqfNpg92oNpaTqJTk2HACPW6Py6QE7Nw/_DSC0213.jpg)\n\n### Nokia 6 : Manual Mode","json_metadata":"{\"tags\":[\"landscapephotography\",\"photography\",\"photofeed\",\"india\",\"travel\"],\"image\":[\"https:\\/\\/steemitimages.com\\/DQmZN3hMG5hXTjPGqfNpg92oNpaTqJTk2HACPW6Py6QE7Nw\\/_DSC0213.jpg\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"c6a5ae33-953d-5954-b51c-fca946c2228a","title":"How to get Details of All the Posts a Person Upvoted in Steemit","author":"codingdefined","created":"May 14, 2018","permlink":"how-to-get-details-of-all-the-posts-a-person-upvoted-in-steemit","body":"#### Repository\n\nhttps://github.com/steemit/steem-js\n\n#### What Will I Learn?\n\n- You will learn How to get Votes Made by User\n- You will learn How to get Details about the Posts where Upvote is Made\n\n#### Requirements\n\n- Basic Understanding of Promises in JavaScript \n\n#### Difficulty\n\n- Basic\n\n#### Tutorial Contents\nThis will be a very short tutorial where we will learn about getting all the posts you voted on whether it's a self-post or others posts. For this, you need to know two basic functions of Steem.js and they are getAccountVotes() and getContent().\n\ngetAccountVotes() gives you details about all the posts you have upvoted, where voter is the username without @. It will give you an array of objects. The object has authorperm which is a permalink of the post you voted, weight of the upvoted, reshares, percentage and the time as shown below. As you can see the time goes back to 2017, which means it gives me the upvotes from the start.\n\n```\nsteem.api.getAccountVotes('codingdefined', function(err, result) {\n  console.log(err, result);\n});\n``` \n\n![](https://steemitimages.com/DQmTDvvnhAjQNDxwhexiQk9tDS8zTqxKB9xSfNdyUHJZLyw/image.png)\n\nSince I do not want to know the upvotes made by in 2017, so what I am gonna do is to reverse the array based on time so that I will get the latest upvote as shown below.\n\n```\nfunction compare(a,b) {\n  if (a.time < b.time)\n    return -1;\n  if (a.time > b.time)\n    return 1;\n  return 0;\n}\n\nsteem.api.getAccountVotes('codingdefined', function (err, resp) {\n\tif (err) console.log(err)\n\tresp.sort(compare);\n\tresp.reverse();\n        console.log(resp);\n}); \n```\n\nI have written a compare method, Sorted by Votes array and then reversed it. The sorting algorithm is for ascending order though I can change the logic, I just kept if anyone needs the array as an ascending order. Now I have the array which is sorted based on the most recent upvote. \n\nNext is to get the Content of the Post which I have upvoted, for that we will be using Promises as we have to call the Steemit Functions Asynchrously inside the loop of the array. Once done we will be combining all the promises and then create the list. Since there are quite a few data, so we will be taking only last 10 upvotes and then get the details.\n\nThe Code of the same is, where we are first taking the 10 objects from the array and then looping it through the map function. Inside the loop, we are splittling the authorperm on '/' to get the author and permalink and then calling getContent asynchronously. At last we are combining all the promises and then displaying the result.\n\n```\nfunction compare(a,b) {\n  if (a.time < b.time)\n    return -1;\n  if (a.time > b.time)\n    return 1;\n  return 0;\n}\n\nsteem.api.getAccountVotes('codingdefined', function (err, resp) {\n    if (err) console.log(err)\n    resp.sort(compare);\n    resp.reverse();\n    let promises = resp.slice(0, 10).map(r => {\n        const autper = r.authorperm.split('/', 2);\n        return steem.api.getContentAsync(autper[0], autper[1])\n                .then((result) => {\n                    return result\n                });\n    })\n    Promise.all(promises)\n      .then(results => {\n        console.log(results);\n      })\n      .catch(e => {\n        console.error(e);\n      })\n})\n```\n\nAs you can see below my last upvote was on https://steemit.com/utopian-io/@amosbastian/introducing-football-a-python-wrapper-for-the-football-data-api. \n\n![](https://steemitimages.com/DQmaTZhTRatZHSM5Gkm2EkHKFctyPvY9BG35EoNeYwNmtEZ/image.png)\n\nThus this simple code gives you the understanding about how to combine two functions and get the required results.\n\n#### Resources\n\nhttps://github.com/steemit/steem-js/tree/master/doc\n\n#### Proof of Work Done\n\nhttps://github.com/codingdefined","json_metadata":"{\"tags\":[\"utopian-io\",\"tutorials\",\"steemdev\",\"javascript\",\"steem\"],\"image\":[\"https:\\/\\/steemitimages.com\\/DQmTDvvnhAjQNDxwhexiQk9tDS8zTqxKB9xSfNdyUHJZLyw\\/image.png\",\"https:\\/\\/steemitimages.com\\/DQmaTZhTRatZHSM5Gkm2EkHKFctyPvY9BG35EoNeYwNmtEZ\\/image.png\"],\"links\":[\"https:\\/\\/github.com\\/steemit\\/steem-js\",\"https:\\/\\/steemit.com\\/utopian-io\\/@amosbastian\\/introducing-football-a-python-wrapper-for-the-football-data-api\",\"https:\\/\\/github.com\\/steemit\\/steem-js\\/tree\\/master\\/doc\",\"https:\\/\\/github.com\\/codingdefined\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"e88fb3a8-0398-56a5-ba08-a13258ad4cfb","title":"Getting Started with AspnetBoilerPlate","author":"codingdefined","created":"May 12, 2018","permlink":"getting-started-with-aspnetboilerplate","body":"#### Repository\n- https://github.com/aspnetboilerplate/aspnetboilerplate\n\n#### What Will I Learn?\n\n- You will learn about AspnetBoilerPlate\n- You will learn about How to get started with AspnetBoilerPlate\n- You will learn the basic structure of the Code Base in AspnetBoilerPlate\n- You will learn about creating Tasks in AspnetBoilerPlate\n\n#### Requirements\n\n- Basic Understanding of C#\n- Visual Studio 2017\n\n#### Difficulty\n\n- Basic\n\n#### Tutorial Contents\n\n##### What is AspnetBoilerPlate\n\nWhenever you have to develop an application, you have to think about designing the architecture of the application, the security, the performance and how to minimize the development effort. What if I say that all the above things are already done for you, you just have to add the business logic to get up and running with the modern day application. \n\nThis is where ASP.NET Boilerplate comes into the picture, which is an application framework which implements best practices thus helps the developers to focus only on the development of the application and do not think about the architecture.\n\n##### How to get started with AspnetBoilerPlate\n\nTo get started with ASP.NET Boiler Plate just head over to the https://www.aspnetboilerplate.com/Templates site and download the source code\n\n![](https://steemitimages.com/DQmRnSjE5FGM4QKCaMNnDNGCjtRY9VrVMRDhKEFSXDNPWpr/image.png) \n\n##### Basic structure of the Code Base in AspnetBoilerPlate\n\nWhen you download the Source Code you will be seeing the below structure of the Code Base. Now all of them are the different layers in the NLayered Architecture.\n\n![](https://steemitimages.com/DQmVvMNunHegSKVU9KuzDGTQU48fVjmxcwPRgX6jq4xHdSg/image.png)\n\n**Infrastructure Layer** is the base layer of the framework where our ORM, Data Migrations, and other DB related tasks are done. In the ASPNETBoilerPlate it is done on the EntityFramework Core application.  This is called infrastructure because it provides data to all other layers to be worked on.\n\n**Domain Layer** is the layer which has domain logic is written like the Entities which will talk to the Infrastructure Layer, the objects which will hold the value after fetching it from DB. The Core solution.\n\n**Application Layer** is the layer which acts as a link to fetch the values from the Domain Layer and pass it on to the frontend. It also helps in maintaining the authorization, session, caching etc. The application solution.\n\n**Service Layer** is the layer which is used to pass values if called as a REST Service. They mainly do not contain any logic, but just pass the values to the callee application. The Web.host solution.\n\n**Presentation Layer** is the layer which is shown to the end user and the end user interacts with it. The Web.MVC solution.\n\nThe above are the NLayered architecture which sums up the whole application.\n\n#### Creating Tasks in AspnetBoilerPlate\n\nSince we know about the architecture, let's say if you want to build something like Steemit where you will store the Content in a database. For that you will be creating tasks, I will show how to do that.\n\nAt first, you need to create a task in the Domain Layer i.e.  .Core project. In the below code we have a created a SteemitPost which mainly contains three things Title, Body, and Tags. It is the simplest things you need when you create a Post. You can also see I have inherited the class CreationAuditedEntity because that will add which user has created this post and when.\n\n```\nusing System.Collections.Generic;\nusing Abp.Domain.Entities.Auditing;\n\nnamespace MyApp\n{\n    public class SteemitPost: CreationAuditedEntity<int, User>\n    {\n        public virtual string Title { get; set; }\n        public virtual string Body { get; set; }\n        public virtual string Tags { get; set; }\n\n        public SteemitPost(string title, string text, string tags)\n        {\n            Title = title;\n            Body= text;\n            Tags = tags;\n        }\n    }\n}\n```\n\nNext thing is that we have to add it to our infrastructure project i.e. EntityFramework. So inside DbContext.cs add the below line which basically tells the ORM that whenever you create the Database create SteemitPost entity too.\n\n```\npublic virtual IDbSet<SteemitPost> SteemitPost { get; set; }\n```\n\nThen we have to run the Update-Database command from the Package Manager Console which creates the Table i.e. SteemitPost.\n\nNow we have a ready Database which has the required table SteemitPost and contains three Columns Title, Body and Tags. Next is how we get all the posts or specific posts. For that, we have to write a Service in an .Application Layer.\n\nAt first, we will be creating a DTO i.e. or Data Transfer Object\n\n```\nusing Abp.Application.Services.Dto;\nusing Abp.AutoMapper;\n\nnamespace MyApp\n{\n    [AutoMapFrom(typeof(SteemitPost))]\n    public class SteemitPostDto : CreationAuditedEntityDto\n    {\n        public string Title { get; set; }\n        public string Text { get; set; }\n        public string Tags { get; set; }\n    }\n}\n```\n\nNext is to define an interface for my DTO\n\n```\npublic interface ISteemitPostAppService : IApplicationService\n    {\n        PagedResultDto<SteemitPostDto> GetSteemitPosts(GetSteemitPostInput input);\n    }\n```\n\nAnd then writing the actual logic to get all the posts\n\n```\n[AbpAuthorize]\n    public class SteemitPostAppService : ApplicationService, ISteemitPostAppService\n    {\n        private readonly IRepository<SteemitPost> _SteemitPostRepository;\n        public SteemitPostAppService(IRepository<SteemitPost> steemitPostRepository)\n        {\n            _steemitPostRepository= steemitPostRepository;\n        }\n\n        public PagedResultDto<SteemitPostDto> GetSteemitPosts(GetSteemitPostInput input)\n        {\n            var posts=\n                _steemitPostRepository\n                    .GetAll()\n                    .ToList();\n\n            return new PagedResultDto<SteemitPostDto>\n                   {\n                       Items = posts.MapTo<List<SteemitPostDto>>()\n                   };\n        }\n}\n```\n\nThat's it done, now we just have to call the Application Layer from the Frontend to get all the Steemit Posts. It is just for basic understanding is to how easy is the development when you have a framework like AspNetBoilerPlate.","json_metadata":"{\"tags\":[\"utopian-io\",\"tutorials\",\"steemdevs\",\"programming\",\"coding\"],\"image\":[\"https:\\/\\/steemitimages.com\\/DQmRnSjE5FGM4QKCaMNnDNGCjtRY9VrVMRDhKEFSXDNPWpr\\/image.png\",\"https:\\/\\/steemitimages.com\\/DQmVvMNunHegSKVU9KuzDGTQU48fVjmxcwPRgX6jq4xHdSg\\/image.png\"],\"links\":[\"https:\\/\\/github.com\\/aspnetboilerplate\\/aspnetboilerplate\",\"https:\\/\\/www.aspnetboilerplate.com\\/Templates\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"dc9f5c82-3eb3-5d4d-8e23-85ce5513eb83","title":"ColorChallenge - Friday Blue - Sky","author":"codingdefined","created":"May 11, 2018","permlink":"colorchallenge-friday-blue-sky","body":"![IMG_20180511_153801.jpg](https://steemitimages.com/DQmbGQZ54bcAs1hYKUWoDTdMjQn6GdRfQzTzi5WFPx6YMQ3/IMG_20180511_153801.jpg)\n\nCamera : Nokia 6","json_metadata":"{\"tags\":[\"colorchallenge\",\"photography\",\"smartphonephotography\",\"india\",\"nature\"],\"image\":[\"https:\\/\\/steemitimages.com\\/DQmbGQZ54bcAs1hYKUWoDTdMjQn6GdRfQzTzi5WFPx6YMQ3\\/IMG_20180511_153801.jpg\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"3c1acc36-4522-559d-86a1-56f97c07284f","title":"ColorChallenge - Thursday Green - Golconda Fort","author":"codingdefined","created":"May 10, 2018","permlink":"colorchallenge-thursday-green-golconda-fort","body":"This image is of Front Side of the Golconda Fort in Hyderabad. The fun part is that the fort is spread across 11 km. \n\n![IMG_20180324_101014.jpg](https://steemitimages.com/DQmTq4X5nJpABopsictVxa66LvYDyWy6uweLjTTMRVLKDrf/IMG_20180324_101014.jpg)\n\n![IMG_20180324_100956.jpg](https://steemitimages.com/DQmayEEohBCd1qJiEPh83YxQJHLygqZTSGy1RvS26NzB84A/IMG_20180324_100956.jpg)\n\n### Camera : Nokia 6","json_metadata":"{\"tags\":[\"colorchallenge\",\"smartphonephotography\",\"photography\",\"india\",\"photofeed\"],\"image\":[\"https:\\/\\/steemitimages.com\\/DQmTq4X5nJpABopsictVxa66LvYDyWy6uweLjTTMRVLKDrf\\/IMG_20180324_101014.jpg\",\"https:\\/\\/steemitimages.com\\/DQmayEEohBCd1qJiEPh83YxQJHLygqZTSGy1RvS26NzB84A\\/IMG_20180324_100956.jpg\"],\"app\":\"steemit\\/0.1\",\"format\":\"markdown\"}"}},{"node":{"id":"4359e647-bc7c-5b32-bfb6-44b09526f29c","title":"A Journey from Sikar to Udaipur Vati","author":"codingdefined","created":"May 09, 2018","permlink":"0ghch8z5","body":"<center><a href='https://d.tube/#!/v/codingdefined/0ghch8z5'><img src='https://ipfs.io/ipfs/QmNpNDusSa2N27JLxe7pGTmVzzK3kKusD8drJn21NxHaXr'></a></center><hr>\n\nThis video is taken from the Car when going from Sikar to Udaipur Vati in Rajasthan. Then I edited the video in VivaVideo.\n\n<hr><a href='https://d.tube/#!/v/codingdefined/0ghch8z5'> ▶️ DTube</a><br /><a href='https://ipfs.io/ipfs/QmQCus1wbtvodbjxhVnZ4m86N53MXuddQqaj4Cwmuj5duQ'> ▶️ IPFS</a>","json_metadata":"{\"video\":{\"info\":{\"title\":\"A Journey from Sikar to Udaipur Vati\",\"snaphash\":\"QmWBWALDkR8yuHhSEPyCHQWdeV8bZRLDDaPqJp5W51oTNN\",\"author\":\"codingdefined\",\"permlink\":\"0ghch8z5\",\"duration\":60.927,\"filesize\":12317754,\"spritehash\":\"Qma2Xz95dtoxy7QXpVdrHdh82s5WCbwnLvFrm1L5iVoe4B\"},\"content\":{\"videohash\":\"QmQCus1wbtvodbjxhVnZ4m86N53MXuddQqaj4Cwmuj5duQ\",\"description\":\"This video is taken from the Car when going from Sikar to Udaipur Vati in Rajasthan. Then I edited the video in VivaVideo.\",\"tags\":[\"india\",\"\",\"nature\",\"beauty\"],\"video480hash\":\"QmZh3WqXrkuLBTybQHTrwYZwtqd12zwhkr8c2kPrpHutPK\"}},\"tags\":[\"india\",\"\",\"nature\",\"beauty\",\"dtube\"],\"app\":\"dtube\\/0.7\"}"}}]}},"pageContext":{"limit":10,"skip":230,"numPages":75,"currentPage":24}}}