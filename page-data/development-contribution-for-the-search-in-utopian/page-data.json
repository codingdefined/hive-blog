{"componentChunkName":"component---src-templates-blog-post-js","path":"/development-contribution-for-the-search-in-utopian","result":{"data":{"site":{"siteMetadata":{"title":"My Hive Posts"}},"hiveArticle":{"title":"Development Contribution for the Search in Utopian","body":"So I along with @sirrius was working on improving the search of the current Utopian.io main site. @sirrius has already shared most of the details on his post [Added text search ordered by relevance score for Utopian](https://utopian.io/utopian-io/@sirrius/added-text-search-ordered-by-weights-for-utopian).\n\nSo here I will at first show what exactly I have done to create a local environment of Utopian.io. To run Utopian.io in your local you actually have to create 3 servers as shown below\n\n1. Utopian Front End Server\n2. Utopian Back End Server for Fetching the Data\n3. Mongo Db Server\n\n### Setting Utopian Front End Server\n\nThis one I have already shared in my [previous post](https://utopian.io/utopian-io/@codingdefined/fixing-forked-project-bug-in-utopian-io), just copying it from there.\n\n>The very first thing I have to do it to fork the original project and run it on my local server. Next, I pulled the master branch from my forked repository using command git pull repository_name master where repository_name is my forked repository full path.\n\n>After pulling, I need to install all the node_modules which are used in the Utopian project for that I have ran npm install in the same repository where my code resides.\n\n>It will take some time if you are doing it for the first time. Once done, its time to run the code. For that you need to run npm run dev-server. If it runs successfully you will get a message as shown below.\n\n>When you navigate to the http://localhost:3000/ you can see the utopian running on your local server.\n\nBut after doing this you will see that you are actually not getting any data. So for that at first we need to set up the Back End Server for Fetching the Data and MongoDB Server.\n\n### Setting Mongo Db Server\n\nWe need to set up MongoDb Server before setting up the Back End server. For this, you need to install MongoDB in your local. Once done you need to run the command `mongod --dbpath c:\\mongodb\\db`, where my db resides in C:\\mongodb\\db.\n\nOnce done you can see that MongoDB has been started in port 27017.\n\n### Setting Utopian Back End Server\n\nSimilar to the Front End server we need to fork the original project (https://github.com/utopian-io/api.utopian.io). After pulling, you need to install all the node_modules using `npm install` in the same repository where my code resides.\n\nBefore running it on the local server you need to comment some code. \n\nComment out below code from config.js\n\n```\nUTOPIAN_GITHUB_SECRET: Joi.string().required(),\nUTOPIAN_GITHUB_CLIENT_ID: Joi.string().required(),\nUTOPIAN_GITHUB_REDIRECT_URL: Joi.string().required(),\nUTOPIAN_STEEMCONNECT_SECRET: Joi.string().required(),\n```\n\nAlso, change some code in the utopian-bot.js.\n\n ```\n const botAccount = process.env.BOT;\n  const refreshToken = process.env.REFRESH_TOKEN;\n  const secret = process.env.CLIENT_SECRET;\n  const forced = process.env.FORCED === 'true' || false;\n```\n\nto \n\n```\nconst botAccount = \"utopian-io\";\nconst refreshToken = \"\";\nconst secret = \"\";\nconst forced = true;\n```\n\nOnce done you can run `npm run dev-server`.  If it runs successfully you will get a message as shown below.\n\n![image.png](https://res.cloudinary.com/hpiynhbhq/image/upload/v1510548163/e7yfrvx9mtetdnibhzpr.png)\n\nThus now you can see the Utopian running on your server and also with all the data.\n\nNow coming back to the search, as of current environment you will see that we are doing an exact match of the words and not full text search. Full-text search mens that we are searching the whole database against the search criteria specified by the user. \n\nFor example, if you say \"forked project in github repository\", we will search whole database of Utopian to get the results where these matching terms are there. Lets say if we get whole matching terms than that result will be shown as a top one whereas we will also get the result where some or the other keywords from the search is not present but their relevancy will be less so that will be shown below.\n\n![image.png](https://res.cloudinary.com/hpiynhbhq/image/upload/v1510548632/qipmalnz3tgdh9ccurct.png) \n\nIt is almost similar to what we search in Google where Google displays relevant result first and then all the result based on the rankings.\n\nTo do this type of search at first we need to create Indexes on our existing database as shown below. Where we are creating the text search on the title and body of the post.\n\n`db.posts.createIndex({\"title\":\"text\",\"body\":\"text\"})`\n\nNow next part is to search the whole database with the exact phrase. So for that we need to find that phrase in our database and then sort it on the score (i.e. relevancy score).\n\n`db.posts.find({$text: {$search: \"forked project in github repository\"}}, {score: {$meta: \"text Score\"}}).sort({score:{$meta:\"text Score\"}})`\n\nNow this was the basics of the text search and how we have moved forward. If you want to know what exactly we have done the change then you can see the pull request from @sirrius here https://github.com/utopian-io/api.utopian.io/pull/18. We thought of creating only one pull request and we both were working on finding the best possible way to show result.\n\n<br /><hr/><em>Open Source Contribution posted via <a href=\"https://utopian.io/utopian-io/@codingdefined/development-contribution-for-the-search-in-utopian\">Utopian.io</a></em><hr/>","created":"November 13, 2017"}},"pageContext":{"title":"Development Contribution for the Search in Utopian","permlink":"development-contribution-for-the-search-in-utopian","previous":{"title":"Scolling till the bottom removes all the Posts","permlink":"scolling-till-the-bottom-removes-all-the-posts"},"next":{"title":"Word Wrap for Github Repositories","permlink":"word-wrap-for-github-repositories"}}}}