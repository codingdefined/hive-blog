{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./node_modules/core-js/modules/es7.string.pad-end.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.string.repeat.js","webpack:///./node_modules/core-js/modules/_string-pad.js","webpack:///./node_modules/core-js/modules/es6.string.trim.js","webpack:///./node_modules/core-js/modules/_string-repeat.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","data","site","siteMetadata","author","social","style","display","marginBottom","rhythm","fixed","avatar","childImageSharp","alt","name","marginRight","minWidth","borderRadius","imgStyle","summary","href","twitter","$export","$pad","userAgent","WEBKIT_BUG","test","P","F","padEnd","maxLength","this","arguments","length","undefined","Layout","header","location","title","children","__PATH_PREFIX__","pathname","scale","marginTop","boxShadow","color","to","fontFamily","marginLeft","maxWidth","padding","Date","getFullYear","repeat","toLength","defined","module","exports","that","fillString","left","S","String","stringLength","fillStr","intMaxLength","fillLen","stringFiller","call","Math","ceil","slice","$trim","toInteger","count","str","res","n","Infinity","RangeError","converter","showdown","Converter","ghCompatibleHeaderId","BlogPostTemplate","pageContext","post","hiveArticle","siteTitle","previous","next","description","body","date","dangerouslySetInnerHTML","__html","makeHtml","flexWrap","justifyContent","listStyle","permlink","rel","pageQuery"],"mappings":"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","file":"component---src-templates-blog-post-js-930e32a97192772af47a.js","sourcesContent":["/**\r\n * Bio component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Image from \"gatsby-image\"\r\n\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\nconst Bio = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query BioQuery {\r\n      avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\r\n        childImageSharp {\r\n          fixed(width: 50, height: 50) {\r\n            ...GatsbyImageSharpFixed\r\n          }\r\n        }\r\n      }\r\n      site {\r\n        siteMetadata {\r\n          author {\r\n            name\r\n            summary\r\n          }\r\n          social {\r\n            twitter\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const { author, social } = data.site.siteMetadata\r\n  return (\r\n    <div\r\n      style={{\r\n        display: `flex`,\r\n        marginBottom: rhythm(2.5),\r\n      }}\r\n    >\r\n      <Image\r\n        fixed={data.avatar.childImageSharp.fixed}\r\n        alt={author.name}\r\n        style={{\r\n          marginRight: rhythm(1 / 2),\r\n          marginBottom: 0,\r\n          minWidth: 50,\r\n          borderRadius: `100%`,\r\n        }}\r\n        imgStyle={{\r\n          borderRadius: `50%`,\r\n        }}\r\n      />\r\n      <p>\r\n        Written by <strong>{author.name}</strong> {author.summary}\r\n        {` `}\r\n        <a href={`https://twitter.com/${social.twitter}`}>\r\n          You should follow him on Twitter\r\n        </a>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bio\r\n","'use strict';\n// https://github.com/tc39/proposal-string-pad-start-end\nvar $export = require('./_export');\nvar $pad = require('./_string-pad');\nvar userAgent = require('./_user-agent');\n\n// https://github.com/zloirock/core-js/issues/280\nvar WEBKIT_BUG = /Version\\/10\\.\\d+(\\.\\d+)?( Mobile\\/\\w+)? Safari\\//.test(userAgent);\n\n$export($export.P + $export.F * WEBKIT_BUG, 'String', {\n  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {\n    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);\n  }\n});\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport { rhythm, scale } from \"../utils/typography\"\r\n\r\nconst Layout = ({ location, title, children }) => {\r\n  const rootPath = `${__PATH_PREFIX__}/`\r\n  let header\r\n\r\n  if (location.pathname === rootPath) {\r\n    header = (\r\n      <h1\r\n        style={{\r\n          ...scale(1.5),\r\n          marginBottom: rhythm(1.5),\r\n          marginTop: 0,\r\n        }}\r\n      >\r\n        <Link\r\n          style={{\r\n            boxShadow: `none`,\r\n            color: `inherit`,\r\n          }}\r\n          to={`/`}\r\n        >\r\n          {title}\r\n        </Link>\r\n      </h1>\r\n    )\r\n  } else {\r\n    header = (\r\n      <h3\r\n        style={{\r\n          fontFamily: `Montserrat, sans-serif`,\r\n          marginTop: 0,\r\n        }}\r\n      >\r\n        <Link\r\n          style={{\r\n            boxShadow: `none`,\r\n            color: `inherit`,\r\n          }}\r\n          to={`/`}\r\n        >\r\n          {title}\r\n        </Link>\r\n      </h3>\r\n    )\r\n  }\r\n  return (\r\n    <div\r\n      style={{\r\n        marginLeft: `auto`,\r\n        marginRight: `auto`,\r\n        maxWidth: rhythm(24),\r\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\r\n      }}\r\n    >\r\n      <header>{header}</header>\r\n      <main>{children}</main>\r\n      <footer>\r\n        Â© {new Date().getFullYear()}, Built with\r\n        {` `}\r\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n      </footer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","var $export = require('./_export');\n\n$export($export.P, 'String', {\n  // 21.1.3.13 String.prototype.repeat(count)\n  repeat: require('./_string-repeat')\n});\n","// https://github.com/tc39/proposal-string-pad-start-end\nvar toLength = require('./_to-length');\nvar repeat = require('./_string-repeat');\nvar defined = require('./_defined');\n\nmodule.exports = function (that, maxLength, fillString, left) {\n  var S = String(defined(that));\n  var stringLength = S.length;\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\n  var intMaxLength = toLength(maxLength);\n  if (intMaxLength <= stringLength || fillStr == '') return S;\n  var fillLen = intMaxLength - stringLength;\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\n  return left ? stringFiller + S : S + stringFiller;\n};\n","'use strict';\n// 21.1.3.25 String.prototype.trim()\nrequire('./_string-trim')('trim', function ($trim) {\n  return function trim() {\n    return $trim(this, 3);\n  };\n});\n","'use strict';\nvar toInteger = require('./_to-integer');\nvar defined = require('./_defined');\n\nmodule.exports = function repeat(count) {\n  var str = String(defined(this));\n  var res = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError(\"Count can't be negative\");\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;\n  return res;\n};\n","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm, scale } from \"../utils/typography\"\r\nimport showdown from 'showdown'\r\n\r\nconst converter = new showdown.Converter({ ghCompatibleHeaderId: true })\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  const post = data.hiveArticle\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const { previous, next } = pageContext\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.title}\r\n        description={post.body}\r\n      />\r\n      <article>\r\n        <header>\r\n          <h1\r\n            style={{\r\n              marginTop: rhythm(1),\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            {post.title}\r\n          </h1>\r\n          <p\r\n            style={{\r\n              ...scale(-1 / 5),\r\n              display: `block`,\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          >\r\n            {post.date}\r\n          </p>\r\n        </header>\r\n        <section dangerouslySetInnerHTML={{ __html: converter.makeHtml(post.body) }} />\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.permlink} rel=\"prev\">\r\n                â {previous.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.permlink} rel=\"next\">\r\n                {next.title} â\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostQuery($permlink: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    hiveArticle(permlink: { eq: $permlink }) {\r\n      title\r\n      body\r\n      created(formatString: \"MMMM DD, YYYY\")\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}